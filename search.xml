<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Markdown基本语法</title>
      <link href="/2020/06024647/"/>
      <url>/2020/06024647/</url>
      
        <content type="html"><![CDATA[<blockquote><p>Markdown是一种纯文本格式的标记语言。虽说是一门语言，但实际学习起来确特别的简单，可能只需要你一杯茶的功夫（手动滑稽）。</p></blockquote><h2 id="一、为什么使用Markdown"><a href="#一、为什么使用Markdown" class="headerlink" title="一、为什么使用Markdown?"></a>一、为什么使用Markdown?</h2><p>为什么使用Markdown？<strong>因为它好用！</strong></p><p>一款写作工具是否好用，需要结合它的使用场景来衡量。我个人的使用场景主要包括：记笔记、编写项目相关文档、写博客等。我选择写作工具一般是从以下几点来考虑：<code>写作效率</code>、<code>易用性</code>、<code>美观度</code>、<code>上手难度</code>、<code>是否收费</code>，结合这几点再来说说我们现在在用的一些写作工具吧。</p><ul><li>Office系列：功能强大、排版能力要求较高、收费软件。</li><li>WPS系列：可以看作为Office系列的替代工具，功能基本一致，基本功能免费。</li><li>记事本系列：使用简单，纯文本保存，不支持格式化。</li></ul><p>对于我个人来说，有时候在编写一个文档时，很多的时间都花费在排版上面。同样的文档内容，为了获得一个完美的排版效果，不得不一遍遍修改。记事本虽然不需要花时间进行排版，但它只能保存纯本文，不能进行格式化排版，无法表达突出、重点内容。</p><p>那有没有一种既拥有记事本的简单，又拥有像Word这样排版能力的写作工具呢？答案肯定是有的，那就是<em>Markdown</em>。Markdown提供给我们一种像使用记事本一样简单的写作语法，只需要几分钟的简单练习，就可以掌握基本的Markdown语法。之后通过Markdown解析器可以将Markdown格式的文档解析成美观的页面。这样我们就可以摆脱排版的困扰，从而专心写作。</p><h2 id="二、怎么使用Markdown"><a href="#二、怎么使用Markdown" class="headerlink" title="二、怎么使用Markdown?"></a>二、怎么使用Markdown?</h2><p>“功欲善其事必先利其器”，虽然使用记事本就可以进行Markdown文档的编写，但作为一个有追求的人，怎么能这么将就呢！这里介绍一款我使用过的最好的Markdown编辑器<a href="https://www.typora.io/" target="_blank" rel="noopener">Typora</a>，没有之一！<code>Typora</code>是一款免费的、美观的、支持全平台的Markdown编辑工具，支持专注模式、实时预览、”What You See Is What You Mean !” </p><p>让我们来实际的感受一下Typora的 “What You See Is What You Mean !” </p><video controls="controls" autoplay="autoplay" loop="loop" height="440px" width="498px">  <source src="https://www.typora.io/img/beta.mp4" type="video/mp4">Your browser does not support the video tag.</video><p>在进行Markdown基本语法的学习之前，我们最好先把Typora安装好，这样就可以一边学习一边练习了！</p><blockquote><p>Typora Windows版本：<a href="https://www.typora.io/#windows" target="_blank" rel="noopener">点我下载</a> &nbsp;&nbsp;|&nbsp;&nbsp;Typora Linux版本：<a href="https://www.typora.io/#linux" target="_blank" rel="noopener">点我下载</a>&nbsp;&nbsp;|&nbsp;&nbsp;Typora Mac版本：<a href="https://www.typora.io/download/Typora.dmg" target="_blank" rel="noopener">点我下载</a></p></blockquote><h2 id="三、Markdown基本语法"><a href="#三、Markdown基本语法" class="headerlink" title="三、Markdown基本语法"></a>三、Markdown基本语法</h2><p>Markdown基本语法主要包括以下几个方面：</p><ul><li>文章标题</li><li>字体格式</li><li>引用</li><li>列表</li><li>链接</li><li>图片</li><li>表格</li><li>代码块</li><li>分割线</li></ul><h3 id="1、文章标题"><a href="#1、文章标题" class="headerlink" title="1、文章标题"></a>1、文章标题</h3><p>文章标题共分为六级，类似<code>HTML</code>中的<a href="https://www.w3school.com.cn/tags/tag_hn.asp" target="_blank" rel="noopener">&lt;h1&gt;-&lt;h6&gt;</a>标签，一级标题用<code>#</code>表示，二级标题用<code>##</code>表示，以此类推，六级标题用<code>######</code>表示。</p><p>Markdown标题语法：</p><pre class="line-numbers language-md"><code class="language-md"># 一级标题名称## 二级标题名称### 三级标题名称#### 四级标题名称##### 五级标题名称###### 六级标题名称<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>注意：</code>标题语法中，<code>#</code>与标题名称之间有一个空格，空格缺少时语法无法正确解析。</p><p>Markdown标题实际效果：</p><img src="/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/cuidonghuan/blog-image//img/202020200604103919.png" alt="Markdown标题实际效果" style="zoom:50%;"><h3 id="2、字体格式"><a href="#2、字体格式" class="headerlink" title="2、字体格式"></a>2、字体格式</h3><p>字体格式主要有：<em>斜体字体</em>、<strong>字体加粗</strong>、<strong><em>斜体加粗字体</em></strong>、<del>加删除线的文字</del>。我们使用``(键盘<code>波浪线~</code>下面的小点)来高亮文字。</p><p>Markdown字体格式相关语法：</p><pre class="line-numbers language-md"><code class="language-md">*需要斜体的文字使用一个星号包括起来***需要加粗的文字使用两个星号包括起来*****需要斜体加粗的文字使用三个星号包括起来***~~需要加删除线的文字使用两个波浪线包括起来~~`inline code,内联代码`<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Markdown字体格式具体效果：<br><em>需要斜体的文字使用一个星号包括起来</em><br><strong>需要加粗的文字使用两个星号包括起来</strong><br><strong><em>需要斜体加粗的文字使用三个星号包括起来</em></strong><br><del>需要加删除线的文字使用两个波浪线包括起来</del><br><code>inline code,内联代码</code></p><h3 id="3、引用"><a href="#3、引用" class="headerlink" title="3、引用"></a>3、引用</h3><p>当需要引用别人的观点或内容时，可以使用Markdown的引用语法，只需<code>&gt;</code>后面跟引用的文字就可以了。</p><p>Markdown引用语法：</p><pre class="line-numbers language-md"><code class="language-md">> 使用`大于号+空格`后面跟引用文字就可以使用引用了，`>`后面的空格不要忘记哦！<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>Markdown引用具体效果：</p><blockquote><p>使用<code>大于号+空格</code>后面跟引用文字就可以使用引用了，<code>&gt;</code>后面的空格不要忘记哦！</p></blockquote><h3 id="4、列表"><a href="#4、列表" class="headerlink" title="4、列表"></a>4、列表</h3><p>列表分为有序列表和无序列表，使用<code>+</code>、<code>-</code>、<code>*</code>都可以表示无序列表。使用<code>1.</code>、<code>2.</code>、<code>3.</code>等可以表示有序列表。</p><p>Markdown列表语法：</p><pre class="line-numbers language-md"><code class="language-md">- 无序列表，减号与列表项内容之间有空格- 无序列表- 无序列表+ 无序列表，加号与列表项内容之间有空格+ 无序列表+ 无序列表* 无序列表，星号与列表项内容之间有空格* 无序列表* 无序列表1. 有序列表1，'1.'与列表项内容之间有空格2. 有序列表23. 有序列表3<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Markdown列表具体效果：</p><ul><li>无序列表，减号与列表项内容之间有空格</li><li>无序列表</li><li>无序列表</li></ul><ul><li>无序列表，加号与列表项内容之间有空格</li><li>无序列表</li><li>无序列表</li></ul><ul><li>无序列表，星号与列表项内容之间有空格</li><li>无序列表</li><li>无序列表</li></ul><ol><li>有序列表1，’1.’与列表项内容之间有空格</li><li>有序列表2</li><li>有序列表3</li></ol><h3 id="5、链接"><a href="#5、链接" class="headerlink" title="5、链接"></a>5、链接</h3><p>Markdown中的链接效果类似<code>HTML</code>中的<a href="https://www.w3school.com.cn/tags/tag_a.asp" target="_blank" rel="noopener">&lt;a&gt;标签</a>，用来表示一个超链接。</p><p>Markdown链接语法：</p><pre class="line-numbers language-md"><code class="language-md">[超链接名称](超链接地址)[崔东欢的博客](http://cuidonghuan.top)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>Markdown链接具体效果：<br><a href="http://cuidonghuan.top">崔东欢的博客</a></p><h3 id="6、图片"><a href="#6、图片" class="headerlink" title="6、图片"></a>6、图片</h3><p>Markdown中的图片效果类似<code>HTML</code>中的<a href="https://www.w3school.com.cn/tags/tag_img.asp" target="_blank" rel="noopener">&lt;img&gt;标签</a>，用来表示一张图片。</p><p>Markdown图片语法：</p><pre class="line-numbers language-md"><code class="language-md">![图片名称](图片地址)![没错，不用再等了，我就是loading图片！](https://cdn.jsdelivr.net/gh/cuidonghuan/blog-image/img/202020200603094907.gif)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>Markdown图片具体效果：<br><img src="/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/cuidonghuan/blog-image/img/202020200603094907.gif" alt="没错，不用再等了，我就是loading图片！"></p><h3 id="7、表格"><a href="#7、表格" class="headerlink" title="7、表格"></a>7、表格</h3><p>Markdown中的表格效果类似<code>HTML</code>中的<a href="https://www.w3school.com.cn/tags/tag_table.asp" target="_blank" rel="noopener">&lt;table&gt;标签</a>，用来表示一个表格。</p><p>Markdown表格语法：</p><pre class="line-numbers language-md"><code class="language-md">|表头|表头|表头||-|:-:|-:||左对齐|居中对齐|右对齐|说明：1.表格语法中'-' 至少要有一个，可以写多个，效果等同一个。2.表格中单元格内容默认左对齐，':-:'表示单元格内容居中对齐，'-:'表示单元格内容右对齐。3.表格语法中第一行表示表头内容，第二行用来设置单元格表头和内容对齐方式，其他为内容行。4.不同的写作工具和平台可能对Markdown语法的支持程度不同，例如Typora中可正常使用表格语法，而目前我使用的Hexo平台中表格单元格内容对齐无效，另外表格与上文内容之间要增加一个空行，否则表格不显示。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Markdown表格具体效果<code>（Markdown源码中，本行与下面的表格语法之间要增加一个空行，否则表格无法正常显示）</code>：</p><table><thead><tr><th>表头</th><th align="center">表头</th><th align="right">表头</th></tr></thead><tbody><tr><td>左对齐</td><td align="center">居中对齐</td><td align="right">右对齐</td></tr></tbody></table><h3 id="8、代码块"><a href="#8、代码块" class="headerlink" title="8、代码块"></a>8、代码块</h3><p>作为程序员，写作内容中加点代码也是经常的事！这时候就是用到<code>代码块</code>的时候了！</p><p>Markdown代码块语法：</p><pre class="line-numbers language-md"><code class="language-md">​```语言名称这里面编写代码内容​```说明：使用三个反引号`，在两行反引号之间编写代码。另外可以在第一行反引号后面添加编程语言的名称来高亮代码内容。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>常见的语言名称见：<a href="https://prismjs.com/#supported-languages" target="_blank" rel="noopener">点我查看</a></p><p>Markdown代码块具体效果：</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>code<span class="token punctuation">.</span>block<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * @description: 代码块 * @author: cuidonghuan * @date: 2020/06/04 10:00 */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CodeBlock</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"来段Java代码！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="9-分割线"><a href="#9-分割线" class="headerlink" title="9.分割线"></a>9.分割线</h3><p>“华丽的分割线”，不需要再敲那么多<code>--------------------------------</code>了。</p><p>Markdown分割线语法：</p><pre class="line-numbers language-md"><code class="language-md">---***___说明：1.分割线语法只需要在单独的一行中连续输入三个减号/星号/下划线，即可出现一条分割线，将分割线上下的文章段落分开。2.三个减号或下划线生成的分割线类似，三个星号生成的分割线稍微不同，见下面的分割线效果。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Markdown分割线具体效果：</p><p><code>---</code>分割线：</p><hr><p><code>***</code>分割线：</p><hr><p><code>___</code>分割线：</p><hr><h2 id="四、Markdown进阶用法"><a href="#四、Markdown进阶用法" class="headerlink" title="四、Markdown进阶用法"></a>四、Markdown进阶用法</h2><blockquote><p>学习完<code>三、Markdown基本语法</code>之后，已经可以愉快的写作了。和写代码一样，<strong>多写、多练、多总结</strong>，相信你很快就可以熟练的掌握Markdown的各类用法。</p></blockquote><p>由于各平台和工具对Markdown语法的支持情况不同，可能相同的写法在不同的平台中显示效果是不同，这个只能多写多用，逐渐掌握各平台的用法，不过最基本的语法都是通用的。</p><p>下面介绍一些Markdown的进阶用法，基础语法可能有时候无法完美的表达我们的需求，可以通过下面的方法来尽可能达到我们的要求。</p><h3 id="1-引用的嵌套"><a href="#1-引用的嵌套" class="headerlink" title="1.引用的嵌套"></a>1.引用的嵌套</h3><p>有时候可能需要用到引用的引用，可用通过引用的嵌套来实现。</p><pre class="line-numbers language-md"><code class="language-md">> 这段是对内容2的引用，应用3。> > 这段是对内容1的引用，内容2。> > > 这段是原始的内容，内容1。说明：1.引用的嵌套，最下面的内容是原始的引用内容。可以通过这种方式实现多层的嵌套。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>引用的嵌套具体效果：</p><blockquote><p>这段是对内容2的引用，应用3。</p><blockquote><p>这段是对内容1的引用，内容2。</p><blockquote><p>这段是原始的内容，内容1。</p></blockquote></blockquote></blockquote><h3 id="2-图片的另一种写法"><a href="#2-图片的另一种写法" class="headerlink" title="2.图片的另一种写法"></a>2.图片的另一种写法</h3><p>有时候可能需要对图片的展示大小做限制，我们可以通过<code>内嵌HTML标签</code>的方式来实现这种需求。</p><p>使用内嵌HTML标签的写法（图片缩小50%显示）：</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/gh/cuidonghuan/blog-image/img/202020200603094907.gif<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>使用内嵌HTML标签的写法（图片缩小50%显示）<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">zoom</span><span class="token punctuation">:</span><span class="token number">50%</span><span class="token punctuation">;</span></span><span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>标准的Markdown图片语法：</p><p><img src="/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/cuidonghuan/blog-image/img/202020200603094907.gif" alt="标准的Markdown图片语法"></p><p>使用内嵌HTML标签的写法（图片缩小50%显示）：</p><img src="/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/cuidonghuan/blog-image/img/202020200603094907.gif" alt="使用内嵌HTML标签的写法（图片缩小50%显示）" style="zoom:50%;"><h3 id="3-表格样式的定制"><a href="#3-表格样式的定制" class="headerlink" title="3.表格样式的定制"></a>3.表格样式的定制</h3><p>标准的Markdown表格语法只能简单的编辑表格内容，对于单元格字体大小、颜色等都无法设置。同样的我们可以使用<code>HTML标签</code>来实现这些定制需求。</p><p>使用<code>HTML标签</code>来定制表格样式：</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style language-css"><span class="token selector"><span class="token class">.customTable</span> table </span><span class="token punctuation">{</span>    <span class="token property">margin</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span>    <span class="token property">border</span><span class="token punctuation">:</span> <span class="token number">1</span>px solid red<span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span><span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>customTable<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>|表头|表头|表头||-|:-:|-:||左对齐|居中对齐|右对齐|<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>使用<code>HTML标签</code>来定制表格样式的具体效果：</p><style>.customTable table {    margin: auto;    border: 1px solid red;    color: red;}</style><div class="customTable"><table><thead><tr><th>表头</th><th align="center">表头</th><th align="right">表头</th></tr></thead><tbody><tr><td>左对齐</td><td align="center">居中对齐</td><td align="right">右对齐</td></tr></tbody></table></div><h2 id="五、总结"><a href="#五、总结" class="headerlink" title="五、总结"></a>五、总结</h2><ol><li>“功欲善其事必先利其器”，选择<code>Typora</code>工具可以大大提升写作效率。</li><li><strong>多写、多练、多总结</strong>，你才能更快的熟练掌握这门写作技能。</li><li>通过<code>内嵌HTML标签</code>的方式可以实现更加复杂的排版功能。</li></ol><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 写作 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>离线安装glibc-2.17</title>
      <link href="/2019/092015257/"/>
      <url>/2019/092015257/</url>
      
        <content type="html"><![CDATA[<p><code>前言：</code>  </p><p>在安装<code>redis5.0</code>时，提示缺少：<code>libc.so.6: version GLIBC_2.17 not found</code>，经过一番查看，发现Linux系统自带的GLIBC版本较低，需要升级到2.17版本。本文演示了升级到<code>GLIBC_2.17</code>的操作过程。</p><a id="more"></a><h3 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h3><p>当前环境信息：</p><pre class="line-numbers language-shell"><code class="language-shell">os：centos6.6gcc:4.4gblic:2.12<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>查看当前系统glibc版本：<code>strings /lib64/libc.so.6 | grep "GLIBC_"</code></p><pre class="line-numbers language-shell"><code class="language-shell">[root@localhost ~]# strings /lib64/libc.so.6 | grep "GLIBC_"GLIBC_2.12<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>准备glibc-2.17源码：<a href="http://ftp.gnu.org/pub/gnu/glibc/glibc-2.17.tar.gz" target="_blank" rel="noopener">glibc-2.17.tar.gz</a></p><p>准备好源码之后，上传到服务器，下面准备编译安装glibc-2.17。</p><h3 id="安装glibc-2-17"><a href="#安装glibc-2-17" class="headerlink" title="安装glibc-2.17"></a>安装glibc-2.17</h3><p>解压<code>tar -zxvf glibc-2.17.tar.gz</code>：</p><pre class="line-numbers language-shell"><code class="language-shell">[root@localhost glibc]# tar -zxvf glibc-2.17.tar.gz<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>创建编译安装目录：</p><pre class="line-numbers language-shell"><code class="language-shell">[root@localhost glibc-2.17]# pwd/opt/glibc/glibc-2.17[root@localhost glibc-2.17]# mkdir build                # 创建编译安装目录[root@localhost glibc-2.17]# cd build[root@localhost build]# pwd/opt/glibc/glibc-2.17/build<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>安装前配置：</p><pre class="line-numbers language-shell"><code class="language-shell">[root@localhost build]# pwd/opt/glibc/glibc-2.17/build[root@localhost build]# ../configure --prefix=/usr --disable-profile --enable-add-ons --with-headers=/usr/include --with-binutils=/usr/bin            # 配置<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>编译安装：</p><pre class="line-numbers language-shell"><code class="language-shell">[root@localhost build]# pwd/opt/glibc/glibc-2.17/build[root@localhost build]make                              # 编译[root@localhost build]make install                      # 安装<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>安装完成后，再次查看glibc版本：</p><pre class="line-numbers language-shell"><code class="language-shell">[root@localhost ~]# strings /lib64/libc.so.6 | grep "GLIBC_"GLIBC_2.2.5GLIBC_2.2.6GLIBC_2.3GLIBC_2.3.2GLIBC_2.3.3GLIBC_2.3.4GLIBC_2.4GLIBC_2.5GLIBC_2.6GLIBC_2.7GLIBC_2.8GLIBC_2.9GLIBC_2.10GLIBC_2.11GLIBC_2.12GLIBC_2.13GLIBC_2.14GLIBC_2.15GLIBC_2.16GLIBC_2.17GLIBC_PRIVATE可以看到支持的最高版本。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>至此，glibc升级成功。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 系统运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 系统运维 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>centos7离线安装redis集群</title>
      <link href="/2019/061718992/"/>
      <url>/2019/061718992/</url>
      
        <content type="html"><![CDATA[<h3 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h3><p>需要准备gcc，redis，ruby，zlib，rubygems，openssl，redis-4.1.0.gem等相关依赖。</p><p><code>说明</code>：redis5.0版本以上，可以使用官方自带的集群构建方法，只需要安装gcc，redis即可，<code>查看标*章节即可</code>。较低版本需要ruby构建redis集群，除gcc，redis之外，还需要安装ruby，zlib，rubygems，openssl，redis.gem等。</p><a id="more"></a><h4 id="检查gcc环境"><a href="#检查gcc环境" class="headerlink" title="检查gcc环境"></a>检查gcc环境</h4><p>输入命令<code>gcc -v</code>，如果显示下面内容，说明gcc已经安装。</p><pre class="line-numbers language-shell"><code class="language-shell">[root@localhost opt]# gcc -v使用内建 specs。COLLECT_GCC=gccCOLLECT_LTO_WRAPPER=/usr/libexec/gcc/x86_64-redhat-linux/4.8.5/lto-wrapper目标：x86_64-redhat-linux配置为：此处省略部分内容...gcc 版本 4.8.5 20150623 (Red Hat 4.8.5-16) (GCC)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="手动安装gcc环境"><a href="#手动安装gcc环境" class="headerlink" title="手动安装gcc环境"></a>手动安装gcc环境</h4><p>如果未显示上述内容，则需要下载相关依赖，进行手动安装。下列为相关依赖列表：</p><pre class="line-numbers language-shell"><code class="language-shell">mpfr-3.1.1-4.el7.x86_64.rpmlibmpc-1.0.1-3.el7.x86_64.rpmkernel-headers-3.10.0-123.el7.x86_64.rpmglibc-headers-2.17-55.el7.x86_64.rpmglibc-devel-2.17-55.el7.x86_64.rpmcpp-4.8.2-16.el7.x86_64.rpmgcc-4.8.2-16.el7.x86_64.rpm<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注：这里提供一个rmp下载地址：<a href="http://rpm.pbone.net/index.php3" target="_blank" rel="noopener">传送门</a>，复制上面的rpm包名，直接搜索下载。</p><p>或者直接下载：<a href="http://cuidonghuan.gitee.io/blog-image/file/gcc4.8.2/mpfr-3.1.1-4.el7.x86_64.rpm" target="_blank" rel="noopener">mpfr</a>,  <a href="http://cuidonghuan.gitee.io/blog-image/file/gcc4.8.2/libmpc-1.0.1-3.el7.x86_64.rpm" target="_blank" rel="noopener">libmpc</a>,  <a href="http://cuidonghuan.gitee.io/blog-image/file/gcc4.8.2/kernel-headers-3.10.0-123.el7.x86_64.rpm" target="_blank" rel="noopener">kernel-headers</a>,  <a href="http://cuidonghuan.gitee.io/blog-image/file/gcc4.8.2/glibc-headers-2.17-55.el7.x86_64.rpm" target="_blank" rel="noopener">glibc-headers</a>,  <a href="http://cuidonghuan.gitee.io/blog-image/file/gcc4.8.2/glibc-devel-2.17-55.el7.x86_64.rpm" target="_blank" rel="noopener">glibc-devel</a>,  <a href="http://cuidonghuan.gitee.io/blog-image/file/gcc4.8.2/cpp-4.8.2-16.el7.x86_64.rpm" target="_blank" rel="noopener">cpp</a>,  <a href="http://cuidonghuan.gitee.io/blog-image/file/gcc4.8.2/gcc-4.8.2-16.el7.x86_64.rpm" target="_blank" rel="noopener">gcc</a></p><p>将下载好的rmp包上传到服务器<code>/opt/redis-cluster/package/gcc4.8.2[路径可自定义]</code>路径下，执行统一安装命令<code>rpm -Uvh *.rpm --nodeps --force</code>进行安装。</p><pre class="line-numbers language-shell"><code class="language-shell">[root@localhost gcc4.8.2]# rpm -Uvh *.rpm --nodeps --force<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>使用<code>gcc -v</code>命令验证安装是否成功。</p><h3 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h3><p>redis5.0以上，只需要下载redis即可。5.0以下版本需要下载ruby等依赖文件。</p><h4 id="下载依赖文件"><a href="#下载依赖文件" class="headerlink" title="下载依赖文件"></a>下载依赖文件</h4><p>安装前需要下载<code>redis</code>，<code>ruby</code>，<code>zlib</code>，<code>rubygems</code>，<code>openssl</code>，<code>redis-4.1.0.gem</code>等相关依赖。</p><ul><li><p>redis5.0.5下载：<a href="https://redis.io/download" target="_blank">传送门</a></p></li><li><p>ruby2.5.5下载：<a href="http://www.ruby-lang.org/en/downloads/" target="_blank">传送门</a></p></li><li><p>zlib1.2.11下载：<a href="http://www.zlib.net" target="_blank">传送门</a></p></li><li><p>rubygems3.0.3下载：<a href="https://rubygems.org/pages/download" target="_blank">传送门</a></p></li><li><p>openssl1.1.0i下载：<a href="https://oomake.com/download/openssl" target="_blank">传送门</a></p></li><li><p>redis-rubygems4.1.0下载：<a href="https://rubygems.org/gems/redis/" target="_blank">传送门</a></p></li></ul><p>直接下载方式：<a href="http://cuidonghuan.gitee.io/blog-image/file/redis-cluster/redis5.0.5/redis-5.0.5.tar.gz" target="_blank" rel="noopener">redis5.0.5</a>,  <a href="http://cuidonghuan.gitee.io/blog-image/file/redis-cluster/ruby2.5.5/ruby-2.5.5.tar.gz" target="_blank" rel="noopener">ruby2.5.5</a>,  <a href="http://cuidonghuan.gitee.io/blog-image/file/redis-cluster/zlib1.2.11/zlib-1.2.11.tar.gz" target="_blank" rel="noopener">zlib1.2.11</a>,  <a href="http://cuidonghuan.gitee.io/blog-image/file/redis-cluster/rubygems3.0.4/rubygems-3.0.4.tgz" target="_blank" rel="noopener">rubygems3.0.3</a>,  <a href="http://cuidonghuan.gitee.io/blog-image/file/redis-cluster/openssl1.1.0i/openssl-1.1.0i.tar.gz" target="_blank" rel="noopener">openssl1.1.0i</a>,  <a href="http://cuidonghuan.gitee.io/blog-image/file/redis-cluster/rubygems-redis4.1.0/redis-4.1.0.gem" target="_blank" rel="noopener">redis-rubygems4.1.0</a></p><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><p>下载好相关依赖文件后，利用<code>xftp</code>工具将依赖文件上传到<code>/opt/redis-cluster/package[路径可自定义]</code>，下面开始安装各个依赖。</p><h5 id="安装ruby2-5-5"><a href="#安装ruby2-5-5" class="headerlink" title="安装ruby2.5.5"></a>安装ruby2.5.5</h5><p>解压ruby：<code>tar -zxvf ruby-2.5.5.tar.gz</code></p><pre class="line-numbers language-shell"><code class="language-shell">[root@localhost package]# cd /opt/redis-cluster/package[root@localhost package]# tar -zxvf ruby-2.5.5.tar.gz       # 解压<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>编译安装ruby，其中<code>./configure --prefix=/usr/local/ruby</code>命令中，<code>--prefix</code>参数将ruby安装到指定目录，也可以自定义路径。</p><pre class="line-numbers language-shell"><code class="language-shell">[root@localhost ruby-2.5.5]# cd /opt/redis-cluster/package/ruby-2.5.5 # 进入到ruby源码文件夹[root@localhost ruby-2.5.5]# ./configure --prefix=/usr/local/ruby[root@localhost ruby-2.5.5]# make && make install          # 编译安装<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>配置ruby环境变量：</p><p>编辑<code>/etc/profile</code>配置文件，在PATH中添加ruby的bin目录路径。执行<code>source /etc/profile</code>命令使配置立即生效。</p><p><img src="/medias/loading.gif" data-original="http://cuidonghuan.gitee.io/blog-image/blog/201906/ruby%E5%AE%89%E8%A3%85%E6%88%AA%E5%9B%BE.png" alt="ruby安装截图.png"></p><pre class="line-numbers language-shell"><code class="language-shell">[root@localhost ruby]# vim /etc/profile           # 编辑profile配置文件[root@localhost ruby]# source /etc/profile        # 使配置文件立即生效[root@localhost ruby]# echo $PATH                 # 输出PATH信息/usr/local/ruby/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/root/bin[root@localhost ruby]# ruby -v                    # 查看ruby版本信息ruby 2.5.5p157 (2019-03-15 revision 67260) [x86_64-linux]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="安装zlib1-2-11"><a href="#安装zlib1-2-11" class="headerlink" title="安装zlib1.2.11"></a>安装zlib1.2.11</h5><p>进入<code>/opt/redis-cluster/package/</code>文件夹，解压并编译安装zlib。</p><pre class="line-numbers language-shell"><code class="language-shell">[root@localhost package]# cd /opt/redis-cluster/package/            # 进入zlib文件夹[root@localhost package]# tar -zxvf zlib-1.2.11.tar.gz              # 解压zlib文件[root@localhost package]# cd zlib-1.2.11/[root@localhost zlib-1.2.11]# ./configure --prefix=/usr/local/zlib[root@localhost zlib-1.2.11]# make && make install                  # 编译安装zlib<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="安装rubygems3-0-3"><a href="#安装rubygems3-0-3" class="headerlink" title="安装rubygems3.0.3"></a>安装rubygems3.0.3</h5><p>RubyGems 是 Ruby 的一个包管理器，它提供一个分发 Ruby 程序和库的标准格式，还提供一个管理程序包安装的工具。</p><pre class="line-numbers language-shell"><code class="language-shell">[root@localhost package]# cd /opt/redis-cluster/package/[root@localhost package]# tar -zxvf rubygems-3.0.4.tgz[root@localhost package]# cd rubygems-3.0.4/[root@localhost rubygems-3.0.4]# ruby setup.rb<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>安装过程中，可能报错：</p><pre class="line-numbers language-shell"><code class="language-shell">[root@localhost rubygems-3.0.4]# ruby setup.rbBundler 1.17.3 installedRubyGems 3.0.4 installedTraceback (most recent call last):    14: from setup.rb:41:in `<main>'    13: from /opt/redis-cluster/package/rubygems-3.0.4/lib/rubygems/gem_runner.rb:59:in `run'    12: from /opt/redis-cluster/package/rubygems-3.0.4/lib/rubygems/command_manager.rb:148:in `run'    11: from /opt/redis-cluster/package/rubygems-3.0.4/lib/rubygems/command_manager.rb:184:in `process_args'    10: from /opt/redis-cluster/package/rubygems-3.0.4/lib/rubygems/command.rb:321:in `invoke_with_build_args'     9: from /opt/redis-cluster/package/rubygems-3.0.4/lib/rubygems/commands/setup_command.rb:176:in `execute'     8: from /opt/redis-cluster/package/rubygems-3.0.4/lib/rubygems/commands/setup_command.rb:617:in `regenerate_binstubs'     7: from /opt/redis-cluster/package/rubygems-3.0.4/lib/rubygems/core_ext/kernel_require.rb:54:in `require'     6: from /opt/redis-cluster/package/rubygems-3.0.4/lib/rubygems/core_ext/kernel_require.rb:54:in `require'     5: from /opt/redis-cluster/package/rubygems-3.0.4/lib/rubygems/commands/pristine_command.rb:3:in `<top (required)>'     4: from /opt/redis-cluster/package/rubygems-3.0.4/lib/rubygems/core_ext/kernel_require.rb:54:in `require'     3: from /opt/redis-cluster/package/rubygems-3.0.4/lib/rubygems/core_ext/kernel_require.rb:54:in `require'     2: from /opt/redis-cluster/package/rubygems-3.0.4/lib/rubygems/package.rb:47:in `<top (required)>'     1: from /opt/redis-cluster/package/rubygems-3.0.4/lib/rubygems/core_ext/kernel_require.rb:54:in `require'/opt/redis-cluster/package/rubygems-3.0.4/lib/rubygems/core_ext/kernel_require.rb:54:in `require': cannot load such file -- zlib (LoadError)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>可能是ruby在编译时，未编译zlib依赖，可重新编译zlib模块：</p><p>cd /opt/redis-cluster/package/ruby-2.5.5/ext/zlib，进入到ruby/zlib模块路径。编译zlib过程中，需要修改Makefile文件：</p><pre class="line-numbers language-shell"><code class="language-shell">280行：#zlib.o: $(top_srcdir)/include/ruby.h 注释掉本行，替换为下一行的内容修改为：zlib.o: ../../include/ruby.h<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre class="line-numbers language-shell"><code class="language-shell">[root@localhost zlib]# pwd/opt/redis-cluster/package/ruby-2.5.5/ext/zlib[root@localhost zlib]# ruby setup.rb                 # 安装zlib依赖，可能会报错make: *** No rule to make target `/include/ruby.h', needed by `zlib.o'.  Stop.   # 报错，提示找不到zlib.o[root@localhost zlib]# vim Makefile                  # 需要修改zlib文件路径，按照下图进行修改[root@localhost zlib]# make                          # 修改完成后，重新编译安装compiling zlib.clinking shared-object zlib.so[root@localhost zlib]# make install/usr/bin/install -c -m 0755 zlib.so /usr/local/ruby/lib/ruby/site_ruby/2.5.0/x86_64-linux<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/medias/loading.gif" data-original="D:%5Cblog%5Chexo%5Csource_posts%5Ccentos7%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85redis%E9%9B%86%E7%BE%A4.assets%5C1560994422642.png" alt="安装zlib过程中修改Makefile文件内容">解决完缺少zlib的问题后，重新安装rubygems。</p><pre class="line-numbers language-shell"><code class="language-shell">[root@localhost package]# cd /opt/redis-cluster/package/[root@localhost package]# tar -zxvf rubygems-3.0.4.tgz    # 解压rubygems压缩包[root@localhost package]# cd rubygems-3.0.4/[root@localhost rubygems-3.0.4]# ruby setup.rb            # 安装rubygems[root@localhost rubygems-3.0.4]# [root@localhost rubygems-3.0.4]# gem -v                   # 查看rubygems版本号3.0.4<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>安装完成后，配置rubygems环境变量：</p><p>rubygems安装完成后，配置rubygems环境变量。编辑vim /etc/profile文件，在文件当中PATH当中加入安装rubygems的bin目录路径，路径为安装目录bin文件夹/root/public/rubygems-3.0.3/bin/ 【这个路径就是你解压出rubygems的路径】 然后保存，执行命令：source /etc/profile让配置立即生效，然后echo $PATH可以查看变量已被添加。</p><p><img src="/medias/loading.gif" data-original="http://cuidonghuan.gitee.io/blog-image/blog/201906/rubygems%E5%AE%89%E8%A3%85%E6%88%AA%E5%9B%BE.png" alt="rubygems安装截图.png"></p><h5 id="安装openssl1-1-0i"><a href="#安装openssl1-1-0i" class="headerlink" title="安装openssl1.1.0i"></a>安装openssl1.1.0i</h5><p>解压openssl，编译安装</p><pre class="line-numbers language-shell"><code class="language-shell">[root@localhost package]# tar -zxvf openssl-1.1.0i.tar.gz   ## 解压openssl[root@localhost package]# cd openssl-1.1.0i[root@localhost openssl-1.1.0i]# ./config -fPIC --prefix=/usr/local/openssl enable-shared ## 配置openssl[root@localhost openssl-1.1.0i]# make && make install  ## 编译安装<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h5 id="安装redis5-0-5"><a href="#安装redis5-0-5" class="headerlink" title="安装redis5.0.5"></a>安装redis5.0.5</h5><p>解压并安装redis：</p><pre class="line-numbers language-shell"><code class="language-shell">[root@localhost package]# cd /opt/redis-cluster/package/[root@localhost package]# tar -zxvf redis-5.0.5.tar.gz         # 解压redis文件[root@localhost package]# cd /opt/redis-cluster/package/redis-5.0.5/[root@localhost redis-5.0.5]# pwd/opt/redis-cluster/package/redis-5.0.5[root@localhost redis-5.0.5]# make && make install             # 编译安装redis[root@localhost redis-5.0.5]# pwd/opt/redis-cluster/package/redis-5.0.5[root@localhost redis-5.0.5]# redis-server redis.conf          # 测试启动redis-server<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>出现以下信息，表示redis安装成功：</p><pre class="line-numbers language-shell"><code class="language-shell">[root@localhost redis-5.0.5]# pwd/opt/redis-cluster/package/redis-5.0.5[root@localhost redis-5.0.5]# redis-server redis.conf 123671:C 20 Jun 2019 10:10:25.162 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo123671:C 20 Jun 2019 10:10:25.162 # Redis version=5.0.5, bits=64, commit=00000000, modified=0, pid=123671, just started123671:C 20 Jun 2019 10:10:25.162 # Configuration loaded123671:M 20 Jun 2019 10:10:25.163 * Increased maximum number of open files to 10032 (it was originally set to 1024).                _._                                                             _.-``__ ''-._                                                   _.-``    `.  `_.  ''-._           Redis 5.0.5 (00000000/0) 64 bit  .-`` .-```.  ```\/    _.,_ ''-._                                    (    '      ,       .-`  | `,    )     Running in standalone mode |`-._`-...-` __...-.``-._|'` _.-'|     Port: 6379 |    `-._   `._    /     _.-'    |     PID: 123671  `-._    `-._  `-./  _.-'    _.-'                                    |`-._`-._    `-.__.-'    _.-'_.-'|                                   |    `-._`-._        _.-'_.-'    |           http://redis.io          `-._    `-._`-.__.-'_.-'    _.-'                                    |`-._`-._    `-.__.-'    _.-'_.-'|                                   |    `-._`-._        _.-'_.-'    |                                    `-._    `-._`-.__.-'_.-'    _.-'                                         `-._    `-.__.-'    _.-'                                                 `-._        _.-'                                                         `-.__.-'                                               123671:M 20 Jun 2019 10:10:25.165 # WARNING: The TCP backlog setting of 511 cannot be enforced because /proc/sys/net/core/somaxconn is set to the lower value of 128.123671:M 20 Jun 2019 10:10:25.165 # Server initialized123671:M 20 Jun 2019 10:10:25.166 # WARNING overcommit_memory is set to 0! Background save may fail under low memory condition. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.123671:M 20 Jun 2019 10:10:25.166 # WARNING you have Transparent Huge Pages (THP) support enabled in your kernel. This will create latency and memory usage issues with Redis. To fix this issue run the command 'echo never > /sys/kernel/mm/transparent_hugepage/enabled' as root, and add it to your /etc/rc.local in order to retain the setting after a reboot. Redis must be restarted after THP is disabled.123671:M 20 Jun 2019 10:10:25.166 * DB loaded from disk: 0.000 seconds123671:M 20 Jun 2019 10:10:25.166 * Ready to accept connections<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="安装redis-rubygems4-1-0"><a href="#安装redis-rubygems4-1-0" class="headerlink" title="安装redis-rubygems4.1.0"></a>安装redis-rubygems4.1.0</h5><p>安装redis-rubygems时，报错：缺少openssl插件</p><pre class="line-numbers language-shell"><code class="language-shell">[root@localhost package]# gem install redis-4.1.0.gem Traceback (most recent call last):    22: from /opt/redis-cluster/package/rubygems-3.0.4/bin/gem:21:in `<main>'    21: from /usr/local/ruby/lib/ruby/site_ruby/2.5.0/rubygems/gem_runner.rb:59:in `run'    20: from /usr/local/ruby/lib/ruby/site_ruby/2.5.0/rubygems/command_manager.rb:148:in `run'    19: from /usr/local/ruby/lib/ruby/site_ruby/2.5.0/rubygems/command_manager.rb:184:in `process_args'    18: from /usr/local/ruby/lib/ruby/site_ruby/2.5.0/rubygems/command.rb:321:in `invoke_with_build_args'    17: from /usr/local/ruby/lib/ruby/site_ruby/2.5.0/rubygems/commands/install_command.rb:165:in `execute'    16: from /usr/local/ruby/lib/ruby/site_ruby/2.5.0/rubygems/commands/install_command.rb:258:in `install_gems'    15: from /usr/local/ruby/lib/ruby/site_ruby/2.5.0/rubygems/commands/install_command.rb:258:in `each'    14: from /usr/local/ruby/lib/ruby/site_ruby/2.5.0/rubygems/commands/install_command.rb:264:in `block in install_gems'    13: from /usr/local/ruby/lib/ruby/site_ruby/2.5.0/rubygems/commands/install_command.rb:201:in `install_gem'    12: from /usr/local/ruby/lib/ruby/site_ruby/2.5.0/rubygems/dependency_installer.rb:478:in `resolve_dependencies'    11: from /usr/local/ruby/lib/ruby/site_ruby/2.5.0/rubygems/resolver/installer_set.rb:56:in `add_always_install'    10: from /usr/local/ruby/lib/ruby/site_ruby/2.5.0/rubygems/resolver/installer_set.rb:155:in `find_all'     9: from /usr/local/ruby/lib/ruby/site_ruby/2.5.0/rubygems/resolver/best_set.rb:29:in `find_all'     8: from /usr/local/ruby/lib/ruby/site_ruby/2.5.0/rubygems/resolver/best_set.rb:23:in `pick_sets'     7: from /usr/local/ruby/lib/ruby/site_ruby/2.5.0/rubygems/source_list.rb:98:in `each_source'     6: from /usr/local/ruby/lib/ruby/site_ruby/2.5.0/rubygems/source_list.rb:98:in `each'     5: from /usr/local/ruby/lib/ruby/site_ruby/2.5.0/rubygems/resolver/best_set.rb:24:in `block in pick_sets'     4: from /usr/local/ruby/lib/ruby/site_ruby/2.5.0/rubygems/source.rb:87:in `dependency_resolver_set'     3: from /usr/local/ruby/lib/ruby/site_ruby/2.5.0/rubygems/remote_fetcher.rb:253:in `fetch_path'     2: from /usr/local/ruby/lib/ruby/site_ruby/2.5.0/rubygems/remote_fetcher.rb:278:in `rescue in fetch_path'     1: from /usr/local/ruby/lib/ruby/site_ruby/2.5.0/rubygems/core_ext/kernel_require.rb:54:in `require'/usr/local/ruby/lib/ruby/site_ruby/2.5.0/rubygems/core_ext/kernel_require.rb:54:in `require': cannot load such file -- openssl (LoadError)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>需要参考安装zlib依赖，进行重新编译ruby依赖：其中–with-openssl-dir=&lt;dir&gt;参数，填写已安装openssl的地址。编译过程中可能会报错，同样的方法修改Makefile文件中ossl.o文件的路径。</p><pre class="line-numbers language-shell"><code class="language-shell">[root@localhost openssl]# cd /opt/redis-cluster/package/ruby-2.5.5/ext/openssl  # 进入到依赖所在路径[root@localhost openssl]# ruby extconf.rb --with-openssl-dir=/usr/local/openssl # 配置[root@localhost openssl]# pwd/opt/redis-cluster/package/ruby-2.5.5/ext/openssl[root@localhost openssl]# make                                                  # 编译make: *** 没有规则可以创建“ossl.o”需要的目标“/include/ruby.h”。 停止。                # 编译报错，提示找不到ruby.h[root@localhost openssl]# vim Makefile<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Makefile替换内容：</p><p>把<code>$(top_srcdir)/include/ruby.h</code>统一修改为<code>../../include/ruby.h</code></p><p>把<code>$(top_srcdir)</code>统一替换成<code>../..</code>，测试通过</p><p>例如：</p><pre class="line-numbers language-shell"><code class="language-shell">325行：#ossl.o: $(top_srcdir)/include/ruby.h # 修改ossl.o文件的路径，使用下一行进行替换替换为：ossl.o: ../../include/ruby.h<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre class="line-numbers language-shell"><code class="language-shell">363行：#ossl_asn1.o: $(top_srcdir)/include/ruby.h # 修改ruby.h路径，替换为下一行替换为：ossl_asn1.o: ../../include/ruby.h<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre class="line-numbers language-shell"><code class="language-shell">401行：#ossl_bio.o: $(top_srcdir)/include/ruby.h # 修改ruby.h路径，替换为下行内容替换为：ossl_bio.o: ../../include/ruby.h<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>修改之后的Makefile文件：<a href="http://cuidonghuan.gitee.io/blog-image/file/redis-cluster/ruby2.5.5/Makefile" target="_blank" rel="noopener">Makefile下载</a></p><p>Makefile文件完整路径：<code>/opt/redis-cluster/package/ruby-2.5.5/ext/openssl/Makefile</code></p><p>修改完成之后，重新编译安装。</p><pre class="line-numbers language-shell"><code class="language-shell">[root@localhost openssl]# make && make install<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>安装redis-4.1.0.gem，</p><pre class="line-numbers language-shell"><code class="language-shell">[root@localhost package]# pwd                          # redis-4.1.0.gem所在路径/opt/redis-cluster/package[root@localhost package]# gem install redis-4.1.0.gem  # 安装redis.gem,显示如下信息，安装成功Successfully installed redis-4.1.0Parsing documentation for redis-4.1.0Installing ri documentation for redis-4.1.0Done installing documentation for redis after 1 secondsWARNING:  Unable to pull data from 'https://rubygems.org/': no such name (https://rubygems.org/specs.4.8.gz)1 gem installed<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>查看是否安装成功：</p><pre class="line-numbers language-shell"><code class="language-shell">[root@localhost package]# gem list redis*** LOCAL GEMS ***redis (4.1.0)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="/medias/loading.gif" data-original="http://cuidonghuan.gitee.io/blog-image/blog/201906/%E5%AE%89%E8%A3%85redis-rubygems4.1.0%E7%BB%93%E6%9E%9C%E6%88%AA%E5%9B%BE.png" alt="安装redis-rubygems4.1.0结果截图.png"></p><h3 id="搭建集群"><a href="#搭建集群" class="headerlink" title="搭建集群"></a>搭建集群</h3><blockquote><p>集群的搭建，主要分为：集群节点的配置，各个节点的启动，集群的创建等步骤。</p></blockquote><h4 id="redis-cluster配置"><a href="#redis-cluster配置" class="headerlink" title="redis-cluster配置"></a>redis-cluster配置</h4><p>搭建集群，首先创建6个集群节点文件夹，</p><pre class="line-numbers language-shell"><code class="language-shell">[root@localhost redis-cluster]# pwd/opt/redis-cluster/redis-cluster[root@localhost redis-cluster]# mkdir 7000 7001 7002 7003 7004 7005     # 新建6个文件夹[root@localhost redis-cluster]# ls7000  7001  7002  7003  7004  7005<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>将<code>redis-cli</code>, <code>redis-server</code>, <code>redis-trib.rb</code>分别复制到6个文件夹中。</p><pre class="line-numbers language-shell"><code class="language-shell">[root@localhost redis-cluster]# cp /opt/redis-cluster/package/redis-5.0.5/src/redis-cli /opt/redis-cluster/package/redis-5.0.5/src/redis-server /opt/redis-cluster/package/redis-5.0.5/src/redis-trib.rb /opt/redis-cluster/redis-cluster/7000[root@localhost redis-cluster]# cp /opt/redis-cluster/package/redis-5.0.5/src/redis-cli /opt/redis-cluster/package/redis-5.0.5/src/redis-server /opt/redis-cluster/package/redis-5.0.5/src/redis-trib.rb /opt/redis-cluster/redis-cluster/7001[root@localhost redis-cluster]# cp /opt/redis-cluster/package/redis-5.0.5/src/redis-cli /opt/redis-cluster/package/redis-5.0.5/src/redis-server /opt/redis-cluster/package/redis-5.0.5/src/redis-trib.rb /opt/redis-cluster/redis-cluster/7002[root@localhost redis-cluster]# cp /opt/redis-cluster/package/redis-5.0.5/src/redis-cli /opt/redis-cluster/package/redis-5.0.5/src/redis-server /opt/redis-cluster/package/redis-5.0.5/src/redis-trib.rb /opt/redis-cluster/redis-cluster/7003[root@localhost redis-cluster]# cp /opt/redis-cluster/package/redis-5.0.5/src/redis-cli /opt/redis-cluster/package/redis-5.0.5/src/redis-server /opt/redis-cluster/package/redis-5.0.5/src/redis-trib.rb /opt/redis-cluster/redis-cluster/7004[root@localhost redis-cluster]# cp /opt/redis-cluster/package/redis-5.0.5/src/redis-cli /opt/redis-cluster/package/redis-5.0.5/src/redis-server /opt/redis-cluster/package/redis-5.0.5/src/redis-trib.rb /opt/redis-cluster/redis-cluster/7005[root@localhost redis-cluster]# cp /opt/redis-cluster/package/redis-5.0.5/redis.conf /opt/redis-cluster/redis-cluster/7000[root@localhost redis-cluster]# cp /opt/redis-cluster/package/redis-5.0.5/redis.conf /opt/redis-cluster/redis-cluster/7001[root@localhost redis-cluster]# cp /opt/redis-cluster/package/redis-5.0.5/redis.conf /opt/redis-cluster/redis-cluster/7002[root@localhost redis-cluster]# cp /opt/redis-cluster/package/redis-5.0.5/redis.conf /opt/redis-cluster/redis-cluster/7003[root@localhost redis-cluster]# cp /opt/redis-cluster/package/redis-5.0.5/redis.conf /opt/redis-cluster/redis-cluster/7004[root@localhost redis-cluster]# cp /opt/redis-cluster/package/redis-5.0.5/redis.conf /opt/redis-cluster/redis-cluster/7005<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>修改每个文件夹下面的redis.conf文件：</p><p>7005，redis.conf：</p><pre class="line-numbers language-sh"><code class="language-sh"># 端口7000,7001,7002,7003,7004,7005port 7005# 默认ip为127.0.0.1 需要改为其他节点机器可访问的ip 否则创建集群时无法访问对应的端口，无法创建集群#bind 127.0.0.1# redis后台运行daemonize yes# pidfile文件对应7000…7005pidfile /var/run/redis_7005.pid# 开启集群  把注释#去掉cluster-enabled yes# 集群的配置  配置文件首次启动自动生成 7000…7005cluster-config-file nodes_7005.conf# 请求超时  默认15秒，可自行设置cluster-node-timeout 15000# aof日志开启  有需要就开启，它会每次写操作都记录一条日志appendonly yes<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>其他文件夹下的redis.conf需要修改：port, pidfile, cluster-config-file的值</p><h4 id="启动redis节点"><a href="#启动redis节点" class="headerlink" title="启动redis节点"></a>启动redis节点</h4><p>分别启动redis六个节点：</p><pre class="line-numbers language-shell"><code class="language-shell">[root@localhost 7000]# /opt/redis-cluster/redis-cluster/7000/redis-server /opt/redis-cluster/redis-cluster/7000/redis.conf40806:C 20 Jun 2019 11:59:04.316 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo40806:C 20 Jun 2019 11:59:04.316 # Redis version=5.0.5, bits=64, commit=00000000, modified=0, pid=40806, just started40806:C 20 Jun 2019 11:59:04.316 # Configuration loaded[root@localhost 7005]# /opt/redis-cluster/redis-cluster/7001/redis-server /opt/redis-cluster/redis-cluster/7001/redis.conf42208:C 20 Jun 2019 12:02:06.947 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo42208:C 20 Jun 2019 12:02:06.947 # Redis version=5.0.5, bits=64, commit=00000000, modified=0, pid=42208, just started42208:C 20 Jun 2019 12:02:06.948 # Configuration loaded[root@localhost 7005]# /opt/redis-cluster/redis-cluster/7002/redis-server /opt/redis-cluster/redis-cluster/7002/redis.conf42275:C 20 Jun 2019 12:02:17.140 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo42275:C 20 Jun 2019 12:02:17.140 # Redis version=5.0.5, bits=64, commit=00000000, modified=0, pid=42275, just started42275:C 20 Jun 2019 12:02:17.140 # Configuration loaded[root@localhost 7005]# /opt/redis-cluster/redis-cluster/7003/redis-server /opt/redis-cluster/redis-cluster/7003/redis.conf42335:C 20 Jun 2019 12:02:25.485 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo42335:C 20 Jun 2019 12:02:25.485 # Redis version=5.0.5, bits=64, commit=00000000, modified=0, pid=42335, just started42335:C 20 Jun 2019 12:02:25.485 # Configuration loaded[root@localhost 7005]# /opt/redis-cluster/redis-cluster/7004/redis-server /opt/redis-cluster/redis-cluster/7004/redis.conf42387:C 20 Jun 2019 12:02:32.759 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo42387:C 20 Jun 2019 12:02:32.759 # Redis version=5.0.5, bits=64, commit=00000000, modified=0, pid=42387, just started42387:C 20 Jun 2019 12:02:32.759 # Configuration loaded[root@localhost 7005]# /opt/redis-cluster/redis-cluster/7005/redis-server /opt/redis-cluster/redis-cluster/7005/redis.conf42450:C 20 Jun 2019 12:02:40.956 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo42450:C 20 Jun 2019 12:02:40.956 # Redis version=5.0.5, bits=64, commit=00000000, modified=0, pid=42450, just started42450:C 20 Jun 2019 12:02:40.956 # Configuration loaded<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>查看启动状态：</p><pre class="line-numbers language-shell"><code class="language-shell">[root@localhost 7005]# lsof -i:7000COMMAND     PID USER   FD   TYPE   DEVICE SIZE/OFF NODE NAMEredis-ser 40807 root    6u  IPv6 13181655      0t0  TCP *:afs3-fileserver (LISTEN)redis-ser 40807 root    7u  IPv4 13181656      0t0  TCP *:afs3-fileserver (LISTEN)[root@localhost 7005]# lsof -i:7001COMMAND     PID USER   FD   TYPE   DEVICE SIZE/OFF NODE NAMEredis-ser 42209 root    6u  IPv6 13189102      0t0  TCP *:afs3-callback (LISTEN)redis-ser 42209 root    7u  IPv4 13189103      0t0  TCP *:afs3-callback (LISTEN)[root@localhost 7005]# lsof -i:7002COMMAND     PID USER   FD   TYPE   DEVICE SIZE/OFF NODE NAMEredis-ser 42276 root    6u  IPv6 13191259      0t0  TCP *:afs3-prserver (LISTEN)redis-ser 42276 root    7u  IPv4 13191260      0t0  TCP *:afs3-prserver (LISTEN)[root@localhost 7005]# lsof -i:7003COMMAND     PID USER   FD   TYPE   DEVICE SIZE/OFF NODE NAMEredis-ser 42336 root    6u  IPv6 13191384      0t0  TCP *:afs3-vlserver (LISTEN)redis-ser 42336 root    7u  IPv4 13191385      0t0  TCP *:afs3-vlserver (LISTEN)[root@localhost 7005]# lsof -i:7004COMMAND     PID USER   FD   TYPE   DEVICE SIZE/OFF NODE NAMEredis-ser 42388 root    6u  IPv6 13190479      0t0  TCP *:afs3-kaserver (LISTEN)redis-ser 42388 root    7u  IPv4 13190480      0t0  TCP *:afs3-kaserver (LISTEN)[root@localhost 7005]# lsof -i:7005COMMAND     PID USER   FD   TYPE   DEVICE SIZE/OFF NODE NAMEredis-ser 42451 root    6u  IPv6 13190585      0t0  TCP *:afs3-volser (LISTEN)redis-ser 42451 root    7u  IPv4 13190586      0t0  TCP *:afs3-volser (LISTEN)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>6个redis节点都已经成功启动，下一步创建集群。</p><h4 id="创建redis集群"><a href="#创建redis集群" class="headerlink" title="创建redis集群"></a>创建redis集群</h4><p>创建redis-cluster集群命令：<code>/opt/redis-cluster/redis-cluster/7000/redis-trib.rb create --replicas 1 192.168.88.111:7000 192.168.88.111:7001 192.168.88.111:7002 192.168.88.111:7003 192.168.88.111:7004 192.168.88.111:7005</code></p><p>redis集群默认前三个节点是master节点，后三个节点是slave节点。</p><p>提示：<code>Can I set the above configuration? (type 'yes' to accept): yes</code>，需要手动输入<code>yes</code>继续。</p><pre class="line-numbers language-shell"><code class="language-shell">[root@localhost 7000]# /opt/redis-cluster/redis-cluster/7000/redis-trib.rb create --replicas 1 192.168.88.111:7000 192.168.88.111:7001 192.168.88.111:7002 192.168.88.111:7003 192.168.88.111:7004 192.168.88.111:7005112633:C 20 Jun 2019 14:42:06.657 # Configuration loaded>>> Performing hash slots allocation on 6 nodes...Master[0] -> Slots 0 - 5460Master[1] -> Slots 5461 - 10922Master[2] -> Slots 10923 - 16383Adding replica 192.168.88.111:7004 to 192.168.88.111:7000Adding replica 192.168.88.111:7005 to 192.168.88.111:7001Adding replica 192.168.88.111:7003 to 192.168.88.111:7002>>> Trying to optimize slaves allocation for anti-affinity[WARNING] Some slaves are in the same host as their masterM: a3e472fe0294569e3fb76110e8657a85ab5a57be 192.168.88.111:7000   slots:[0-5460] (5461 slots) masterM: 9be2be00a17a37c9ad901d7b5eb952857c59410c 192.168.88.111:7001   slots:[5461-10922] (5462 slots) masterM: b2f94e48faafb98f87f894f8782a0543fe21b7b4 192.168.88.111:7002   slots:[10923-16383] (5461 slots) masterS: ac42ce6d37c4bf06447ebf22396235ae199dffeb 192.168.88.111:7003   replicates a3e472fe0294569e3fb76110e8657a85ab5a57beS: 69d7d189a8bdb5b69c812ebdc09d02ea06eef3be 192.168.88.111:7004   replicates 9be2be00a17a37c9ad901d7b5eb952857c59410cS: d1acb584b44fad79bca3b2f5925bf0980af0b7cd 192.168.88.111:7005   replicates b2f94e48faafb98f87f894f8782a0543fe21b7b4Can I set the above configuration? (type 'yes' to accept): yes>>> Nodes configuration updated>>> Assign a different config epoch to each node>>> Sending CLUSTER MEET messages to join the clusterWaiting for the cluster to join...>>> Performing Cluster Check (using node 192.168.88.111:7000)M: a3e472fe0294569e3fb76110e8657a85ab5a57be 192.168.88.111:7000   slots:[0-5460] (5461 slots) master   1 additional replica(s)S: ac42ce6d37c4bf06447ebf22396235ae199dffeb 192.168.88.111:7003   slots: (0 slots) slave   replicates a3e472fe0294569e3fb76110e8657a85ab5a57beM: b2f94e48faafb98f87f894f8782a0543fe21b7b4 192.168.88.111:7002   slots:[10923-16383] (5461 slots) master   1 additional replica(s)M: 9be2be00a17a37c9ad901d7b5eb952857c59410c 192.168.88.111:7001   slots:[5461-10922] (5462 slots) master   1 additional replica(s)S: d1acb584b44fad79bca3b2f5925bf0980af0b7cd 192.168.88.111:7005   slots: (0 slots) slave   replicates b2f94e48faafb98f87f894f8782a0543fe21b7b4S: 69d7d189a8bdb5b69c812ebdc09d02ea06eef3be 192.168.88.111:7004   slots: (0 slots) slave   replicates 9be2be00a17a37c9ad901d7b5eb952857c59410c[OK] All nodes agree about slots configuration.>>> Check for open slots...>>> Check slots coverage...[OK] All 16384 slots covered.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>创建redis集群：<code>Temporary failure in name resolution</code>错误</p><pre class="line-numbers language-shell"><code class="language-shell">[root@localhost 7005]# /opt/redis-cluster/redis-cluster/7000/redis-cli --cluster create 192.168.88.111:7000 192.168.88.111:7001 192.168.88.111:7002 192.168.88.111:7003 192.168.88.111:7004 192.168.88.111:7005Could not connect to Redis at 192.168.88.111:7000 192.168.88.111:7001: Temporary failure in name resolution<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><code>Temporary failure in name resolution</code>解决方法：</p><pre class="line-numbers language-shell"><code class="language-shell">[root@localhost 7005]# vim /etc/resolv.conf<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>修改<code>/etc/resolv.conf</code>文件，resolv.conf中添加：</p><pre class="line-numbers language-shell"><code class="language-shell">nameserver 114.114.114.114nameserver 8.8.8.8<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>创建集群：<code>Name or service not known</code>错误</p><pre class="line-numbers language-shell"><code class="language-shell">[root@localhost 7005]# /opt/redis-cluster/redis-cluster/7000/redis-cli --cluster create 192.168.88.111:7000 192.168.88.111:7001 192.168.88.111:7002 192.168.88.111:7003 192.168.88.111:7004 192.168.88.111:7005 --cluster-replicas 1Could not connect to Redis at 192.168.88.111:7000 192.168.88.111:7001: Name or service not known<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>分别启动六个redis节点，之后创建redis集群，操作提示：</p><pre class="line-numbers language-shell"><code class="language-shell">[root@localhost 7000]# redis-server /opt/redis-cluster/redis-cluster/7001/redis.conf78200:C 20 Jun 2019 13:24:32.668 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo78200:C 20 Jun 2019 13:24:32.669 # Redis version=5.0.5, bits=64, commit=00000000, modified=0, pid=78200, just started78200:C 20 Jun 2019 13:24:32.669 # Configuration loaded[root@localhost 7000]# redis-server /opt/redis-cluster/redis-cluster/7002/redis.conf78237:C 20 Jun 2019 13:24:36.984 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo78237:C 20 Jun 2019 13:24:36.984 # Redis version=5.0.5, bits=64, commit=00000000, modified=0, pid=78237, just started78237:C 20 Jun 2019 13:24:36.984 # Configuration loaded[root@localhost 7000]# redis-server /opt/redis-cluster/redis-cluster/7003/redis.conf78261:C 20 Jun 2019 13:24:40.321 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo78261:C 20 Jun 2019 13:24:40.321 # Redis version=5.0.5, bits=64, commit=00000000, modified=0, pid=78261, just started78261:C 20 Jun 2019 13:24:40.321 # Configuration loaded[root@localhost 7000]# redis-server /opt/redis-cluster/redis-cluster/7004/redis.conf78289:C 20 Jun 2019 13:24:44.236 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo78289:C 20 Jun 2019 13:24:44.236 # Redis version=5.0.5, bits=64, commit=00000000, modified=0, pid=78289, just started78289:C 20 Jun 2019 13:24:44.236 # Configuration loaded[root@localhost 7000]# redis-server /opt/redis-cluster/redis-cluster/7005/redis.conf78316:C 20 Jun 2019 13:24:47.762 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo78316:C 20 Jun 2019 13:24:47.762 # Redis version=5.0.5, bits=64, commit=00000000, modified=0, pid=78316, just started78316:C 20 Jun 2019 13:24:47.762 # Configuration loaded[root@localhost 7000]# [root@localhost 7000]# /opt/redis-cluster/redis-cluster/7000/redis-trib.rb create --replicas 1 192.168.88.111:7000 192.168.88.111:7001 192.168.88.111:7002 192.168.88.111:7003 192.168.88.111:7004 192.168.88.111:7005WARNING: redis-trib.rb is not longer available!You should use redis-cli instead.All commands and features belonging to redis-trib.rb have been movedto redis-cli.In order to use them you should call redis-cli with the --clusteroption followed by the subcommand name, arguments and options.Use the following syntax:redis-cli --cluster SUBCOMMAND [ARGUMENTS] [OPTIONS]Example:redis-cli --cluster create 192.168.88.111:7000 192.168.88.111:7001 192.168.88.111:7002 192.168.88.111:7003 192.168.88.111:7004 192.168.88.111:7005 --cluster-replicas 1To get help about all subcommands, type:redis-cli --cluster help[root@localhost 7000]# redis-cli --cluster create 192.168.88.111:7000 192.168.88.111:7001 192.168.88.111:7002 192.168.88.111:7003 192.168.88.111:7004 192.168.88.111:7005 --cluster-replicas 1>>> Performing hash slots allocation on 6 nodes...Master[0] -> Slots 0 - 5460Master[1] -> Slots 5461 - 10922Master[2] -> Slots 10923 - 16383Adding replica 192.168.88.111:7004 to 192.168.88.111:7000Adding replica 192.168.88.111:7005 to 192.168.88.111:7001Adding replica 192.168.88.111:7003 to 192.168.88.111:7002>>> Trying to optimize slaves allocation for anti-affinity[WARNING] Some slaves are in the same host as their masterM: ec78a11bfcb77d7a0b10be4f167aad66c2674f46 192.168.88.111:7000   slots:[0-5460] (5461 slots) masterM: 82aa6615161a6498d51595ad5033451a4d25a130 192.168.88.111:7001   slots:[5461-10922] (5462 slots) masterM: c2315d41570c833fb73931ad9e42b925c810f076 192.168.88.111:7002   slots:[10923-16383] (5461 slots) masterS: dfefd4202804ce1ad8f6d1ba622f268322a5a7dc 192.168.88.111:7003   replicates 82aa6615161a6498d51595ad5033451a4d25a130S: 7eda0f871cecdf07ad95e7c2ed1f98d2604dd54b 192.168.88.111:7004   replicates c2315d41570c833fb73931ad9e42b925c810f076S: 8c62ca2dc9362f63a1ec78912d1de4ee238adb41 192.168.88.111:7005   replicates ec78a11bfcb77d7a0b10be4f167aad66c2674f46Can I set the above configuration? (type 'yes' to accept): yes>>> Nodes configuration updated>>> Assign a different config epoch to each node>>> Sending CLUSTER MEET messages to join the clusterWaiting for the cluster to join..>>> Performing Cluster Check (using node 192.168.88.111:7000)M: ec78a11bfcb77d7a0b10be4f167aad66c2674f46 192.168.88.111:7000   slots:[0-5460] (5461 slots) master   1 additional replica(s)S: 7eda0f871cecdf07ad95e7c2ed1f98d2604dd54b 192.168.88.111:7004   slots: (0 slots) slave   replicates c2315d41570c833fb73931ad9e42b925c810f076M: c2315d41570c833fb73931ad9e42b925c810f076 192.168.88.111:7002   slots:[10923-16383] (5461 slots) master   1 additional replica(s)M: 82aa6615161a6498d51595ad5033451a4d25a130 192.168.88.111:7001   slots:[5461-10922] (5462 slots) master   1 additional replica(s)S: 8c62ca2dc9362f63a1ec78912d1de4ee238adb41 192.168.88.111:7005   slots: (0 slots) slave   replicates ec78a11bfcb77d7a0b10be4f167aad66c2674f46S: dfefd4202804ce1ad8f6d1ba622f268322a5a7dc 192.168.88.111:7003   slots: (0 slots) slave   replicates 82aa6615161a6498d51595ad5033451a4d25a130[OK] All nodes agree about slots configuration.>>> Check for open slots...>>> Check slots coverage...[OK] All 16384 slots covered.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h3><p>验证集群可用性，连接启动一个redis节点，存取数据进行测试：</p><pre class="line-numbers language-shell"><code class="language-shell">[root@localhost 7000]# redis-cli -c -h 192.168.88.111 -p 7000192.168.88.111:7000> set hello 123OK192.168.88.111:7000> get hello"123"192.168.88.111:7000> exit[root@localhost 7000]# redis-cli -c -h 192.168.88.111 -p 7004192.168.88.111:7004> set hello1 222-> Redirected to slot [11613] located at 192.168.88.111:7002OK192.168.88.111:7002> get hello1"222"192.168.88.111:7002> get hello-> Redirected to slot [866] located at 192.168.88.111:7000"123"<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>如果直接使用<code>redis-cli -h 192.168.88.111 -p 7000</code>进行连接，会出现<code>(error) MOVED 866 192.168.88.111:7000</code>类似的错误。</p><p><code>redis-cli -c -h 192.168.88.111 -p 7000</code>中的<code>-c</code>表示使用集群模式进行连接。</p><h4 id="启动关闭脚本"><a href="#启动关闭脚本" class="headerlink" title="启动关闭脚本"></a>启动关闭脚本</h4><h5 id="启动脚本"><a href="#启动脚本" class="headerlink" title="启动脚本"></a>启动脚本</h5><p>创建启动脚本start.sh，直接使用<code>sh start.sh</code>启动redis集群。</p><pre class="line-numbers language-shell"><code class="language-shell">[root@localhost redis-cluster]# pwd/opt/redis-cluster/redis-cluster[root@localhost redis-cluster]# touch start.sh[root@localhost redis-cluster]# vim start.sh<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><code>start.sh</code>内容：</p><pre class="line-numbers language-shell"><code class="language-shell"># 分别启动7000-7005六个redis节点/opt/redis-cluster/redis-cluster/7000/redis-server /opt/redis-cluster/redis-cluster/7000/redis.conf/opt/redis-cluster/redis-cluster/7000/redis-server /opt/redis-cluster/redis-cluster/7001/redis.conf/opt/redis-cluster/redis-cluster/7000/redis-server /opt/redis-cluster/redis-cluster/7002/redis.conf/opt/redis-cluster/redis-cluster/7000/redis-server /opt/redis-cluster/redis-cluster/7003/redis.conf/opt/redis-cluster/redis-cluster/7000/redis-server /opt/redis-cluster/redis-cluster/7004/redis.conf/opt/redis-cluster/redis-cluster/7000/redis-server /opt/redis-cluster/redis-cluster/7005/redis.conf# 创建redis集群/opt/redis-cluster/redis-cluster/7000/redis-cli --cluster create 192.168.88.111:7000 192.168.88.111:7001 192.168.88.111:7002 192.168.88.111:7003 192.168.88.111:7004 192.168.88.111:7005 --cluster-replicas 1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>将<code>start.sh</code>设置成可执行文件：</p><pre class="line-numbers language-shell"><code class="language-shell">[root@localhost redis-cluster]# pwd/opt/redis-cluster/redis-cluster[root@localhost redis-cluster]# ls7000  7001  7002  7003  7004  7005  start.sh  stop.sh[root@localhost redis-cluster]# chmod +x start.sh<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注意：如果redis六个节点安装在不同的机器上，则需要分别启动各节点，最后再创建集群。</p><h5 id="关闭命令"><a href="#关闭命令" class="headerlink" title="关闭命令"></a>关闭命令</h5><p>创建关闭脚本stop.sh，直接使用<code>sh stop.sh</code>命令关闭redis集群。</p><pre class="line-numbers language-shell"><code class="language-shell">[root@localhost redis-cluster]# pwd/opt/redis-cluster/redis-cluster[root@localhost redis-cluster]# touch stop.sh[root@localhost redis-cluster]# vim stop.sh<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><code>stop.sh</code>内容：</p><pre class="line-numbers language-shell"><code class="language-shell"># 分别关闭7000-7005六个redis节点/opt/redis-cluster/redis-cluster/7000/redis-cli -p 7000 shutdown/opt/redis-cluster/redis-cluster/7000/redis-cli -p 7001 shutdown/opt/redis-cluster/redis-cluster/7000/redis-cli -p 7002 shutdown/opt/redis-cluster/redis-cluster/7000/redis-cli -p 7003 shutdown/opt/redis-cluster/redis-cluster/7000/redis-cli -p 7004 shutdown/opt/redis-cluster/redis-cluster/7000/redis-cli -p 7005 shutdown<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>将<code>stop.sh</code>设置成可执行文件：</p><pre class="line-numbers language-shell"><code class="language-shell">[root@localhost redis-cluster]# pwd/opt/redis-cluster/redis-cluster[root@localhost redis-cluster]# ls7000  7001  7002  7003  7004  7005  start.sh  stop.sh[root@localhost redis-cluster]# chmod +x stop.sh<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注意：关闭集群之后，再次启动会报错，详见<code>redis常见错误-错误1</code>。</p><h3 id="redis常用命令"><a href="#redis常用命令" class="headerlink" title="redis常用命令"></a>redis常用命令</h3><p>连接单个节点<code>[-c：表示已集群模式连接]</code>：</p><pre class="line-numbers language-shell"><code class="language-shell">/opt/redis-cluster/redis-cluster/7000/redis-cli -c -h 192.168.88.111 -p 7000<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>关闭单个节点：</p><pre class="line-numbers language-shell"><code class="language-shell">/opt/redis-cluster/redis-cluster/7000/redis-cli -h 192.168.88.111 -p 7000 shutdown<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>启动redis-cluster：</p><pre class="line-numbers language-shell"><code class="language-shell">/opt/redis-cluster/redis-cluster/start.sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>关闭redis-cluster：</p><pre class="line-numbers language-shell"><code class="language-shell">/opt/redis-cluster/redis-cluster/stop.sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="redis常见错误"><a href="#redis常见错误" class="headerlink" title="redis常见错误"></a>redis常见错误</h3><h4 id="错误1"><a href="#错误1" class="headerlink" title="错误1"></a>错误1</h4><p><code>[ERR] Node 192.168.88.111:7000 is not empty. Either the node already knows other nodes (check with CLUSTER NODES) or contains some key in database 0.</code></p><p>错误原因：由于上次redis集群没有配置成功，生成了每个节点的配置文件和db的备份文件，所以才会产生这个错误。</p><p>解决方法：需要删除六个redis节点的备份文件，数据库文件，集群配置文件，即每个节点中的appendonly.aof、dump.rdb、node_xxx.conf文件都要被删除。</p><p>另外还需要连接各个redis节点，清空数据。</p><pre class="line-numbers language-shell"><code class="language-shell">[root@localhost 7000]# redis-cli -c -p 7000   # 连接redis节点127.0.0.1:7000> flushdb                       # 清空数据库OK127.0.0.1:7000> cluster reset                 # 重置OK<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>操作完上述步骤，重启所有的redis节点，之后再创建集群即可。</p><h4 id="错误2"><a href="#错误2" class="headerlink" title="错误2"></a>错误2</h4><p><code>redis-cluster (error) MOVED 866 192.168.88.111:7000</code></p><p>解决方法：连接时，使用<code>redis-cli -c -h 127.0.0.1 -p 7000</code>，而不是<code>redis-cli -h 127.0.0.1 -p 7000</code></p><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://blog.csdn.net/zf_csdn/article/details/88304605" target="_blank" rel="noopener">CentOS7离线Redis集群搭建</a></p><p><a href="https://blog.csdn.net/u010463613/article/details/89477462" target="_blank" rel="noopener">Centos7.x离线安装redis-cluster集群</a></p><p><a href="https://my.oschina.net/ruoli/blog/2252393" target="_blank" rel="noopener">一文看懂 Redis5 搭建集群</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 系统运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 系统运维 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
